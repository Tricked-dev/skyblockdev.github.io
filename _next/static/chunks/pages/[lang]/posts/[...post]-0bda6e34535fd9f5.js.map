{"version":3,"file":"static/chunks/pages/[lang]/posts/[...post]-0bda6e34535fd9f5.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,0BACA,WACE,OAAO,EAAQ,U,4JCER,SAASC,EAAK,G,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,KACrE,OAAM,SACHC,EAAAA,EAAS,CAACL,MAAQ,GAAQ,OAANA,EAAM,kBAAiBE,YAAaA,EAAaE,KAAMA,E,mBACzEE,EAAAA,GAAG,CAACC,QAAS,YAAaC,OAAO,K,mBAC/BC,OAAI,C,oBACFC,UAAO,C,qBACLJ,EAAAA,GAAG,CAACK,OAAO,OAAOC,eAAe,SAASC,YAAY,OAAOC,WAAW,OAAOC,KAAK,QAAQC,UAAU,Q,UACpGb,IAAS,UAAKc,EAAAA,GAAI,CAACC,MAAM,W,UAAW,aAAWf,M,SAC/CgB,EAAAA,EAAQ,CAAClB,QAASA,Q,SAEpBmB,KAAE,gB","sources":["webpack://_N_E/?d589","webpack://_N_E/./pages/[lang]/posts/[...post].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/[lang]/posts/[...post]\",\n      function () {\n        return require(\"private-next-pages/[lang]/posts/[...post].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/[lang]/posts/[...post]\"])\n      });\n    }\n  ","import { getPostBySlug, getAllPosts } from \"^api/index\";\nimport Container from \"^components/container\";\nimport { Box, Text } from \"@chakra-ui/react\";\nimport Markdown from \"^components/markdown\";\nimport Head from \"next/head\";\nimport { getAllLanguageSlugs, getLanguage } from \"^api/lang\";\nexport default function Post({ title, content, description, published, lang }: any) {\n  return (\n    <Container title={`${title} | Tricked.pro`} description={description} lang={lang}>\n      <Box variant={\"elevation\"} shadow=\"md\">\n        <main>\n          <article>\n            <Box margin=\"auto\" justifyContent=\"center\" marginRight=\"auto\" marginLeft=\"auto\" maxW=\"60rem\" className=\"posts\">\n              {published && <Text color=\"GrayText\">Published {published}</Text>}\n              <Markdown content={content} />\n            </Box>\n            <br />\n          </article>\n        </main>\n      </Box>\n    </Container>\n  );\n}\n\nexport async function getStaticProps(context: any) {\n  const language = getLanguage(context.params.lang);\n  return {\n    props: { ...(await getPostBySlug(context.params.lang, context.params.post.join(\"/\"))), lang: language },\n  };\n}\n\nexport async function getStaticPaths() {\n  let paths: any = [...(await getAllPosts(\"nl\")), ...(await getAllPosts(\"en\"))];\n  const langs = getAllLanguageSlugs();\n  paths = paths.map((post: any) => ({\n    params: { post: post.slug.split(\"/\") },\n  }));\n\n  let newPaths = [];\n  for (let path of paths) {\n    for (let lang of langs) {\n      newPaths.push({ params: { ...path.params, ...lang.params } });\n    }\n  }\n\n  return {\n    paths: newPaths,\n    fallback: false,\n  };\n}\n"],"names":["window","__NEXT_P","push","Post","title","content","description","published","lang","Container","Box","variant","shadow","main","article","margin","justifyContent","marginRight","marginLeft","maxW","className","Text","color","Markdown","br"],"sourceRoot":""}