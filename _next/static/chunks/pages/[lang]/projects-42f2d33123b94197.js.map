{"version":3,"file":"static/chunks/pages/[lang]/projects-42f2d33123b94197.js","mappings":"qFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,mBACA,WACE,OAAO,EAAQ,U,ygBCAR,SAASC,EAAkB,G,IAAEC,EAAF,EAAEA,SACpCC,GAAWC,EAAAA,EAAAA,KACKC,EAAW,GAAXA,EAAAA,EAAAA,MAAS,GAAxBC,EAAeD,EAAW,GAArBE,EAAUF,EAAW,GAQjC,OANAG,EAAAA,EAAAA,YAAU,WACJD,GACFJ,EAASM,MAAM,aAEhB,CAACN,EAAUI,KAER,SACHG,EAAAA,EAAAA,IAAU,CACTJ,IAAKA,EACLK,QAASR,EACTS,QAAQ,SACRC,WAAY,CAAEC,SAAU,GAAKC,MAAO,IACpCC,SAAU,CACRC,QAAS,CAAEC,QAAS,EAAGC,MAAO,GAC9BC,OAAQ,CAAEF,QAAS,EAAGC,MAAO,I,SAG9BjB,M,m9BCrBP,IAyBA,EAzBa,SAAQ,G,IAALA,EAAQ,EAARA,SAAUmB,EAAI,EAAJA,KAAmB,GAAF,EAAXC,YAAW,EAAEC,MAAAA,OAAI,IAAG,OAAI,EAAEC,EAAM,EAANA,OAAWC,EAAK,KAA1DvB,WAAUmB,OAAMC,cAAaC,OAAaC,WACxBE,GAAAA,EAAAA,EAAAA,WAAS,GAAlCC,EAAyBD,EAAe,GAA9BE,EAAeF,EAAe,GAE/C,OAAM,SACHG,EAAAA,QAAQ,CAACC,UAAQ,EAACC,UAAU,EAAOV,KAAO,UAAc,OAALA,GAAQW,GAAK,IAAUX,OAAPE,GAAY,OAALF,G,oBACxEY,EAAAA,GAAU,GACTC,GAAa,aAATb,EACJc,aAAc,WAAMP,OAAAA,GAAY,IAChCQ,aAAc,WAAMR,OAAAA,GAAY,IAChCS,OAAQ,CACNC,eAAgB,OAChBJ,GAAI,aAEFT,EAAK,C,UAERvB,G,SACAqC,EAAAA,GAAM,C,mBACJC,EAAAA,GAAG,CAACC,MAAOd,EAAW,OAAS,OAAQe,KAAK,OAAOC,kBAAkB,MAAMC,aAAa,OAAOC,kBAAmBrB,EAAS,YAAc,uB,UCf9IsB,EAAQ,CACZ,CACEC,KAAM,OACNC,MAAO,KAET,CACED,KAAM,WACNC,MAAO,aAET,CACED,KAAM,QACNC,MAAO,WA2EX,EAnEe,SAAQ,G,QAALC,MAAAA,OAAK,IAAG,EAAAH,EAAK,MAAEvB,KAAAA,OAAI,IAAG,OAAI,MAAE2B,UAAAA,OAAS,IAAG,gBAAa,EACjCC,GAAAA,EAAAA,EAAAA,MAA5BC,EAA4BD,EAA5BC,OAAQC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACmCC,GAAAA,EAAAA,EAAAA,MAAnDC,EAAmDD,EAAnDC,UAA4BC,EAAuBF,EAAxCG,gBACbC,GAASC,EAAAA,EAAAA,aAETC,GAAc,qB,SAEfZ,EAAMa,KAAI,SAACC,GACV,OAAMxC,EAAAA,EAAAA,KAALyC,EAAI,CAACzC,KAAMA,EAAMF,KAAM0C,EAAKf,MAAOxB,OAAQmC,EAAOM,UAAYF,EAAKf,MAAuBkB,EAAG,EAAGC,QAAS,K,SACvGJ,EAAKhB,MADwEgB,EAAKhB,WAwB3F,OAlBAvC,EAAAA,EAAAA,YAAU,WACJV,OAAOsE,WACQ,SAAbZ,EACFY,SAASC,gBAAgBC,UAAUC,OAAO,QAE1CH,SAASC,gBAAgBC,UAAUE,IAAI,aAavC,qB,mBAEDhC,EAAAA,GAAG,CAACiC,GAAI,EAAGC,UAAU,MAAMC,eAAe,Y,oBACxCC,EAAAA,GAAS,CAAClC,KAAK,e,qBACbmC,EAAAA,GAAI,CAACC,EAAG,GAAIC,WAAY,SAAUC,eAAgB,gB,oBAChDC,EAAAA,GAAU,CAACC,KAAM,KAAMC,KAAM/B,GAAM,SAAIgC,EAAAA,GAAS,K,SAAOC,EAAAA,GAAa,IAAKC,aAAY,YAAaC,QAAS,CAAEC,GAAKpC,EAAkB,UAAT,QAAsBqC,QAASrC,EAASE,EAAUD,K,SAC7KqC,EAAAA,GAAM,CAACC,QAAS,EAAGZ,WAAY,S,oBAC7BW,EAAAA,GAAM,CAAC1D,GAAI,MAAO2D,QAAS,EAAGJ,QAAS,CAAEK,KAAM,OAAQJ,GAAI,Q,oBACzDK,EAAAA,GAAI,C,mBACFC,IAAC,C,SAAE5C,MAGLW,Q,SAGJgB,EAAAA,GAAI,CAACE,WAAY,S,mBACfgB,EAAAA,GAAM,CAACT,aAAW,eAAeG,QA1B9C,WACEhC,IACAuC,aAAaC,MAAQzC,EACJ,SAAbA,EACFY,SAASC,gBAAgBC,UAAUC,OAAO,QAE1CH,SAASC,gBAAgBC,UAAUE,IAAI,S,SAqBd,UAAdhB,GAAqB,SAAI0C,EAAAA,GAAQ,K,SAAOC,EAAAA,GAAO,WAKrD/C,GAAM,SACJZ,EAAAA,GAAG,CAAC4D,GAAI,EAAGC,GAAI,E,mBACbC,EAAAA,GAAK,CAACtE,GAAI,MAAO2D,QAAS,E,SACxB9B,MAGH,aCnFV0C,EAAQ,CACV,CACEC,EAAG,SACH1B,EAAG,UACH2B,GAAG,GAEL,CACED,EAAG,UACH1B,EAAG,WACH2B,GAAG,GAEL,CACED,EAAG,SACH1B,EAAG,UACH2B,GAAG,GAEL,CACED,EAAG,SACH1B,EAAG,YACH2B,GAAG,IAIQ,SAASC,EAAO,G,MAAA,EAAEnF,KAAAA,OAAI,IAAG,OAAI,EAC1C,OAAM,UACHoF,SAAM,CAACC,UAAU,yE,oBACfC,KAAE,CAACD,UAAU,+D,SACbE,MAAG,CAACF,UAAU,+D,SACZL,EAAMzC,KAAI,SAACiD,EAAGC,GACb,OAAM,UAALF,MAAG,CAACF,UAAU,0B,UACZG,EAAEN,IAAC,SACDzC,EAAAA,QAAI,CAAC3C,KAAO,UAAa,OAAJ0F,EAAEjC,GAAK9C,GAAK,IAAU+E,OAAPxF,GAAW,OAAJwF,EAAEjC,G,SAC3CiC,EAAEP,KAGLO,EAAEN,IAAC,SAAKzC,EAAAA,QAAI,CAAC3C,KAAM0F,EAAEjC,E,SAAIiC,EAAEP,MANeQ,S,SAUjDF,MAAG,CAACF,UAAU,oE,4eChCrB,IAAMK,EAAW,CACfC,GAAI,CACFC,YAAc,kFAEhBC,GAAI,CACFD,YAAc,6FAIH,SAASvC,EAAUnD,GAChC,IAAQvB,EAA4EuB,EAA5EvB,SAAU4C,EAAkErB,EAAlEqB,MAAOI,EAA2DzB,EAA3DyB,UAAW,EAAgDzB,EAAhD4F,eAAAA,OAAc,IAAG,GAAK,EAAE9F,EAAwBE,EAAxBF,KAAS+F,EAAU,EAAK7F,EAAK,CAAjFvB,WAAU4C,QAAOI,YAAWmE,iBAAwB9F,SACtDoC,GAASC,EAAAA,EAAAA,aAET2D,E,uUAAO,EACXC,MAAO,cACPC,KAAM,UACNC,WAAY,UACZC,SAAU,wDACVC,SAAU,sFACVzC,KAAM,cACN0C,MAAQ,UAA6D,OAApDlE,EAAOX,MAAM8E,QAAQ,IAAK,IAAIA,QAAQ,QAAS,KAAK,SAClEb,EAAa,GACbA,EAAS1F,GACT+F,GAGL,OAAM,UACHR,MAAG,C,qBACDiB,EAAAA,QAAI,C,oBACFC,OAAI,CAACzG,KAAMA,K,SACXiG,QAAK,C,SAAED,EAAKC,S,SACZD,OAAI,CAACxE,KAAK,0BAA0BkF,QAASV,EAAKG,c,SAClD3D,OAAI,CAACmE,IAAI,YAAY7G,KAAO,sBAAmC,OAAdsC,EAAOwE,W,SACxDZ,OAAI,CAACxE,KAAK,WAAWkF,QAASV,EAAKK,Y,SACnCL,OAAI,CAACxE,KAAK,WAAWkF,QAASV,EAAKI,Y,SACnCJ,OAAI,CAACxE,KAAK,cAAckF,QAASV,EAAKG,c,SACtCH,OAAI,CAACxE,KAAK,cAAckF,QAASV,EAAKJ,e,SACtCpD,OAAI,CAACmE,IAAI,OAAO7G,KAAMkG,EAAKpC,KAAMsC,KAAK,e,SACtCF,OAAI,CAACa,SAAS,SAASH,QAAU,sBAAmC,OAAdtE,EAAOwE,W,SAC7DZ,OAAI,CAACa,SAAS,UAAUH,QAASV,EAAKE,Q,SACtCF,OAAI,CAACa,SAAS,eAAeH,QAASV,EAAKC,S,SAC3CD,OAAI,CAACa,SAAS,iBAAiBH,QAASV,EAAKJ,e,SAC7CI,OAAI,CAACa,SAAS,WAAWH,QAASV,EAAKC,S,SACvCD,OAAI,CAACa,SAAS,WAAWH,QAASV,EAAKM,S,SACvCN,OAAI,CAACxE,KAAK,gBAAgBkF,QAASV,EAAKC,S,SACxCD,OAAI,CAACxE,KAAK,sBAAsBkF,QAASV,EAAKJ,e,SAC9CI,OAAI,CAACxE,KAAK,gBAAgBkF,QAASV,EAAKM,QACxCN,EAAKc,OAAI,SAAKd,OAAI,CAACa,SAAS,yBAAyBH,QAASV,EAAKc,W,SAGrEC,EAAG,CAACrF,MAAOH,EAAOvB,KAAMA,EAAM2B,UAAWA,K,SAEzCqF,OAAI,C,mBACF/F,EAAAA,GAAG,CAACuC,WAAW,UAAUrC,KAAO2E,EAA2B,OAAV,QAAkBmB,OAAO,OAAOC,QAAUpB,EAAmC,OAAlB,gB,SAC1GnH,O,SAGJwG,EAAM,CAACnF,KAAMA,S,0LC5DL,SAASmH,EAAS,G,IAAEC,EAAF,EAAEA,SAAUpH,EAAZ,EAAYA,KAC3C,OAAM,SACHqD,EAAAA,EAAS,CAACrD,KAAMA,E,mBACdiB,EAAAA,GAAG,C,mBACDoG,EAAAA,GAAI,CAACjD,QAAS,EAAGZ,WAAW,SAAS8D,KAAK,OAAO7D,eAAe,SAAS8D,IAAI,O,SAC3EH,EAAS7E,KAAI,SAACiD,EAAGC,GAChB,OAAM,SACH+B,EAAAA,GAAQ,CAASC,YAAY,MAAMpG,aAAa,KAAKqG,SAAS,S,oBAC5DhJ,EAAAA,EAAiB,C,oBACfiJ,EAAAA,GAAK,CAACC,IAAM,WAAkB,OAARpC,EAAEc,OAASjB,UAAU,eAAewC,IAAKrC,EAAEhE,KAAMN,MAAO,OAAQ4G,OAAO,W,UAC7F7G,EAAAA,GAAG,CAAC0B,EAAE,I,oBACJ2B,EAAAA,GAAI,CAACyD,SAAU,S,SAAWvC,EAAEhE,Q,SAC5B8C,EAAAA,GAAI,CAAC0D,MAAM,U,SAAWxC,EAAEI,e,SACxB3E,EAAAA,GAAG,Q,UAELgH,EAAAA,GAAW,CAACtE,KAAK,KAAKuE,YAAU,EAACC,QAAQ,U,oBACvC7H,EAAAA,QAAQ,CAACR,KAAO,6BAA6BW,GAAK,IAAoB+E,OAAjBxF,EAAK,cAAmB,OAAPwF,EAAE4C,M,mBACtE5D,EAAAA,GAAM,CAAC/D,GAAG,IAAI4H,YAAa,W,SAAY,YAKzC7C,EAAE8C,UAAO,SACP9D,EAAAA,GAAM,CAAC/D,GAAG,IAAI4H,YAAa,WAAYE,GAAG,MAAMzI,KAAO,WAAoB,OAAV0F,EAAE8C,S,SAAW,YAIhF9C,EAAEgD,SAAM,SACNhE,EAAAA,GAAM,CAAC/D,GAAG,IAAI4H,YAAa,WAAYE,GAAG,MAAMzI,KAAO,sBAA8B,OAAT0F,EAAEgD,Q,SAAU,kBArBlF/C,e","sources":["webpack://_N_E/?f236","webpack://_N_E/./components/FadeIn.tsx","webpack://_N_E/./components/Link.tsx","webpack://_N_E/./components/nav.tsx","webpack://_N_E/./components/footer.tsx","webpack://_N_E/./components/container.tsx","webpack://_N_E/./pages/[lang]/projects/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/[lang]/projects\",\n      function () {\n        return require(\"private-next-pages/[lang]/projects/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/[lang]/projects\"])\n      });\n    }\n  ","import { motion, useAnimation } from \"framer-motion\";\nimport { useEffect } from \"react\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Box } from \"@chakra-ui/react\";\nexport default function FadeInWhenVisible({ children }: any) {\n  const controls = useAnimation();\n  const [ref, inView] = useInView();\n\n  useEffect(() => {\n    if (inView) {\n      controls.start(\"visible\");\n    }\n  }, [controls, inView]);\n\n  return (\n    <motion.div\n      ref={ref}\n      animate={controls}\n      initial=\"hidden\"\n      transition={{ duration: 0.3, delay: 0.3 }}\n      variants={{\n        visible: { opacity: 1, scale: 1 },\n        hidden: { opacity: 0, scale: 0 },\n      }}\n    >\n      {children}\n    </motion.div>\n  );\n}\n","import NextLink from \"next/link\";\nimport { Link as ChakraLink, Box, Center } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nconst Link = ({ children, href, currentPath, lang = \"en\", active, ...props }: any) => {\n  const [expended, setExpended] = useState(false);\n\n  return (\n    <NextLink passHref prefetch={false} href={`/[lang]${href}`} as={`/${lang}${href}`}>\n      <ChakraLink\n        bg={href === \"gray.700\"}\n        onMouseEnter={() => setExpended(true)}\n        onMouseLeave={() => setExpended(false)}\n        _hover={{\n          textDecoration: \"none\",\n          bg: \"gray.700\",\n        }}\n        {...props}\n      >\n        {children}\n        <Center>\n          <Box width={expended ? \"100%\" : \"2rem\"} maxW=\"100%\" borderBottomWidth=\"4px\" borderRadius=\"10px\" borderBottomColor={active ? \"brand.700\" : \"brand.600\"} />\n        </Center>\n        {/* {!expended && <Box as={motion.div} data-isOpen={isOpen} initial={{ borderRadius: 50 }} borderBottomWidth=\"3px\" borderBottomRadius=\"3px\" borderBottomColor={active ? \"brand.700\" : \"brand.600\"}></Box>} */}\n      </ChakraLink>\n    </NextLink>\n  );\n};\n\nexport default Link;\n","import { Box, Flex, HStack, IconButton, Button, useColorMode, Text, useDisclosure, Stack, Container } from \"@chakra-ui/react\";\nimport Link from \"./Link\";\nimport { HamburgerIcon, CloseIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\n\nconst Links = [\n  {\n    name: \"Home\",\n    route: \"/\",\n  },\n  {\n    name: \"Projects\",\n    route: \"/projects\",\n  },\n  {\n    name: \"Posts\",\n    route: \"/posts\",\n  },\n  // {\n  //   name: \"Aethor\",\n  //   route: \"/aethor\",\n  // },\n];\n\nconst Navbar = ({ links = Links, lang = \"en\", TextValue = \"Tricked.pro\" }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { colorMode, toggleColorMode: SetToggleColorMode } = useColorMode();\n  const router = useRouter();\n\n  const navigationItem = (\n    <>\n      {links.map((link) => (\n        <Link lang={lang} href={link.route} active={router.pathname == link.route} key={link.name} p={2} rounded={\"md\"}>\n          {link.name}\n        </Link>\n      ))}\n    </>\n  );\n  useEffect(() => {\n    if (window.document)\n      if (colorMode == \"light\") {\n        document.documentElement.classList.remove(\"dark\");\n      } else {\n        document.documentElement.classList.add(\"dark\");\n      }\n  });\n  function toggleColorMode() {\n    SetToggleColorMode();\n    localStorage.theme = colorMode;\n    if (colorMode == \"light\") {\n      document.documentElement.classList.remove(\"dark\");\n    } else {\n      document.documentElement.classList.add(\"dark\");\n    }\n  }\n\n  return (\n    <>\n      <Box py={5} borderTop=\"2px\" borderTopColor=\"green.500\">\n        <Container maxW=\"container.lg\">\n          <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n            <IconButton size={\"md\"} icon={isOpen ? <CloseIcon /> : <HamburgerIcon />} aria-label={\"Open Menu\"} display={{ md: !isOpen ? \"none\" : \"inherit\" }} onClick={isOpen ? onClose : onOpen} />\n            <HStack spacing={8} alignItems={\"center\"}>\n              <HStack as={\"nav\"} spacing={4} display={{ base: \"none\", md: \"flex\" }}>\n                <Text>\n                  <b>{TextValue}</b>\n                </Text>\n\n                {navigationItem}\n              </HStack>\n            </HStack>\n            <Flex alignItems={\"center\"}>\n              <Button aria-label=\"Switch Theme\" onClick={toggleColorMode}>\n                {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n              </Button>\n            </Flex>\n          </Flex>\n\n          {isOpen ? (\n            <Box pb={4} mt={3}>\n              <Stack as={\"nav\"} spacing={4}>\n                {navigationItem}\n              </Stack>\n            </Box>\n          ) : null}\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Navbar;\n","import Link from \"next/link\";\n\nlet items = [\n  {\n    n: \"Matrix\",\n    h: \"/matrix\",\n    i: false,\n  },\n  {\n    n: \"Discord\",\n    h: \"/discord\",\n    i: false,\n  },\n  {\n    n: \"Github\",\n    h: \"/github\",\n    i: false,\n  },\n  {\n    n: \"Donate\",\n    h: \"/donating\",\n    i: true,\n  },\n];\n\nexport default function Footer({ lang = \"en\" }: any) {\n  return (\n    <footer className=\"flex flex-col justify-center items-start max-w-2xl mx-auto w-full mb-8\">\n      <hr className=\"w-full border-1 border-gray-200 dark:border-gray-800 mb-8\" />\n      <div className=\"w-full max-w-2xl grid grid-cols-1 gap-4 pb-16 sm:grid-cols-3\">\n        {items.map((x, y) => (\n          <div className=\"flex flex-col space-y-4\" key={y}>\n            {x.i && (\n              <Link href={`/[lang]${x.h}`} as={`/${lang}${x.h}`}>\n                {x.n}\n              </Link>\n            )}\n            {!x.i && <Link href={x.h}>{x.n}</Link>}\n          </div>\n        ))}\n      </div>\n      <div className=\"w-full max-w-2xl grid grid-cols-1 gap-4 pb-16 sm:grid-cols-3\"></div>\n    </footer>\n  );\n}\n","import Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\nimport Nav from \"./nav\";\nimport NextLink from \"next/link\";\n\nimport Footer from \"./footer\";\n\nconst langMeta = {\n  en: {\n    description: `Hello i'm Tricked im a Rust and Typescript developer, my github is Tricked-dev`,\n  },\n  nl: {\n    description: `Hallo ik ben Tricked ik ben een Rust en Typescript developer, mijn github is Tricked-dev`,\n  },\n};\n\nexport default function Container(props: any) {\n  const { children, Links, TextValue, DontforceWidth = false, lang, ...customMeta } = props;\n  const router = useRouter();\n\n  const meta = {\n    title: \"Tricked.pro\",\n    type: \"website\",\n    themeColor: \"#317EFB\",\n    keywords: \"javascript typescript programming rust discord matrix\",\n    viewport: \"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\",\n    icon: \"favicon.ico\",\n    image: `/cards/${router.route.replace(\"/\", \"\").replace(/\\//gim, \"_\")}.png`,\n    ...langMeta[\"en\"],\n    ...langMeta[lang as keyof typeof langMeta],\n    ...customMeta,\n  };\n\n  return (\n    <div>\n      <Head>\n        <html lang={lang} />\n        <title>{meta.title}</title>\n        <meta name=\"msapplication-TileColor\" content={meta.themeColor} />\n        <link rel=\"canonical\" href={`https://tricked.pro${router.asPath}`} />\n        <meta name=\"viewport\" content={meta.viewport} />\n        <meta name=\"keywords\" content={meta.keywords} />\n        <meta name=\"theme-color\" content={meta.themeColor} />\n        <meta name=\"description\" content={meta.description} />\n        <link rel=\"icon\" href={meta.icon} type=\"image/ico\" />\n        <meta property=\"og:url\" content={`https://tricked.pro${router.asPath}`} />\n        <meta property=\"og:type\" content={meta.type} />\n        <meta property=\"og:site_name\" content={meta.title} />\n        <meta property=\"og:description\" content={meta.description} />\n        <meta property=\"og:title\" content={meta.title} />\n        <meta property=\"og:image\" content={meta.image} />\n        <meta name=\"twitter:title\" content={meta.title} />\n        <meta name=\"twitter:description\" content={meta.description} />\n        <meta name=\"twitter:image\" content={meta.image} />\n        {meta.date && <meta property=\"article:published_time\" content={meta.date} />}\n      </Head>\n\n      <Nav links={Links} lang={lang} TextValue={TextValue} />\n\n      <main>\n        <Box alignItems=\"stretch\" maxW={!DontforceWidth ? \"80rem\" : \"none\"} margin=\"auto\" padding={!DontforceWidth ? \"4px 10px 40px\" : \"none\"}>\n          {children}\n        </Box>\n      </main>\n      <Footer lang={lang} />\n    </div>\n  );\n}\n","import { Box, Button, ButtonGroup, Grid, GridItem, Image, Text } from \"@chakra-ui/react\";\nimport { getAllProjects, getProjectBySlug } from \"^api\";\nimport FadeInWhenVisible from \"^components/FadeIn\";\nimport Container from \"^components/container\";\nimport { getAllLanguageSlugs, getLanguage } from \"^api/lang\";\nimport NextLink from \"next/link\";\nexport default function Projects({ projects, lang }: { projects: any[]; lang: string }) {\n  return (\n    <Container lang={lang}>\n      <Box>\n        <Grid spacing={1} alignItems=\"center\" wrap=\"wrap\" justifyContent=\"center\" gap=\"1rem\">\n          {projects.map((x, y) => {\n            return (\n              <GridItem key={y} borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n                <FadeInWhenVisible>\n                  <Image src={`/images/${x.image}`} className=\"object-cover\" alt={x.name} width={\"100%\"} height=\"10rem\" />\n                  <Box p=\"6\">\n                    <Text fontSize={\"larger\"}>{x.name}</Text>\n                    <Text color=\"gray.50\">{x.description}</Text>\n                    <Box></Box>\n                  </Box>\n                  <ButtonGroup size=\"sm\" isAttached variant=\"outline\">\n                    <NextLink href={`/[lang]/projects/[project]`} as={`/${lang}/projects/${x.slug}`}>\n                      <Button as=\"a\" colorScheme={\"telegram\"}>\n                        Visit\n                      </Button>\n                    </NextLink>\n\n                    {x.website && (\n                      <Button as=\"a\" colorScheme={\"telegram\"} mr=\"-px\" href={`https://${x.website}`}>\n                        Website\n                      </Button>\n                    )}\n                    {x.github && (\n                      <Button as=\"a\" colorScheme={\"telegram\"} mr=\"-px\" href={`https://github.com/${x.github}`}>\n                        Github\n                      </Button>\n                    )}\n                  </ButtonGroup>\n                </FadeInWhenVisible>\n              </GridItem>\n            );\n          })}\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n\nexport async function getStaticPaths() {\n  const paths = getAllLanguageSlugs();\n  return {\n    paths,\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps({ params }: any) {\n  const language = getLanguage(params.lang);\n  return {\n    props: {\n      lang: language,\n      projects: await getAllProjects(language),\n    },\n  };\n}\n"],"names":["window","__NEXT_P","push","FadeInWhenVisible","children","controls","useAnimation","useInView","ref","inView","useEffect","start","motion","animate","initial","transition","duration","delay","variants","visible","opacity","scale","hidden","href","currentPath","lang","active","props","useState","expended","setExpended","NextLink","passHref","prefetch","as","ChakraLink","bg","onMouseEnter","onMouseLeave","_hover","textDecoration","Center","Box","width","maxW","borderBottomWidth","borderRadius","borderBottomColor","Links","name","route","links","TextValue","useDisclosure","isOpen","onOpen","onClose","useColorMode","colorMode","SetToggleColorMode","toggleColorMode","router","useRouter","navigationItem","map","link","Link","pathname","p","rounded","document","documentElement","classList","remove","add","py","borderTop","borderTopColor","Container","Flex","h","alignItems","justifyContent","IconButton","size","icon","CloseIcon","HamburgerIcon","aria-label","display","md","onClick","HStack","spacing","base","Text","b","Button","localStorage","theme","MoonIcon","SunIcon","pb","mt","Stack","items","n","i","Footer","footer","className","hr","div","x","y","langMeta","en","description","nl","DontforceWidth","customMeta","meta","title","type","themeColor","keywords","viewport","image","replace","Head","html","content","rel","asPath","property","date","Nav","main","margin","padding","Projects","projects","Grid","wrap","gap","GridItem","borderWidth","overflow","Image","src","alt","height","fontSize","color","ButtonGroup","isAttached","variant","slug","colorScheme","website","mr","github"],"sourceRoot":""}