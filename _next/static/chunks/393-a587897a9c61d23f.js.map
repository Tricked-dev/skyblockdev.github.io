{"version":3,"file":"static/chunks/393-a587897a9c61d23f.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@chakra-ui/progress/dist/chakra-ui-progress.esm.js","webpack://_N_E/./node_modules/react-intersection-observer/react-intersection-observer.m.js","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/animation-controls.mjs","webpack://_N_E/./node_modules/framer-motion/dist/es/animation/use-animation.mjs"],"sourcesContent":["import { keyframes, chakra, useStyles, omitThemingProps, useMultiStyleConfig, StylesProvider } from '@chakra-ui/system';\nimport { valueToPercent, isFunction, isUndefined, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar spin = keyframes({\n  \"0%\": {\n    strokeDasharray: \"1, 400\",\n    strokeDashoffset: \"0\"\n  },\n  \"50%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-100\"\n  },\n  \"100%\": {\n    strokeDasharray: \"400, 400\",\n    strokeDashoffset: \"-260\"\n  }\n});\nvar rotate = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar progress = keyframes({\n  \"0%\": {\n    left: \"-40%\"\n  },\n  \"100%\": {\n    left: \"100%\"\n  }\n});\nvar stripe = keyframes({\n  from: {\n    backgroundPosition: \"1rem 0\"\n  },\n  to: {\n    backgroundPosition: \"0 0\"\n  }\n});\n\n/**\n * Get the common `aria-*` attributes for both the linear and circular\n * progress components.\n */\nfunction getProgressProps(options) {\n  var _options$value = options.value,\n      value = _options$value === void 0 ? 0 : _options$value,\n      min = options.min,\n      max = options.max,\n      valueText = options.valueText,\n      getValueText = options.getValueText,\n      isIndeterminate = options.isIndeterminate;\n  var percent = valueToPercent(value, min, max);\n\n  var getAriaValueText = function getAriaValueText() {\n    if (value == null) return undefined;\n    return isFunction(getValueText) ? getValueText(value, percent) : valueText;\n  };\n\n  return {\n    bind: {\n      \"data-indeterminate\": isIndeterminate ? \"\" : undefined,\n      \"aria-valuemax\": max,\n      \"aria-valuemin\": min,\n      \"aria-valuenow\": isIndeterminate ? undefined : value,\n      \"aria-valuetext\": getAriaValueText(),\n      role: \"progressbar\"\n    },\n    percent: percent,\n    value: value\n  };\n}\n\nvar _excluded$1 = [\"size\", \"isIndeterminate\"],\n    _excluded2$1 = [\"size\", \"max\", \"min\", \"valueText\", \"getValueText\", \"value\", \"capIsRound\", \"children\", \"thickness\", \"color\", \"trackColor\", \"isIndeterminate\"];\n\nvar Circle = function Circle(props) {\n  return /*#__PURE__*/React.createElement(chakra.circle, _extends({\n    cx: 50,\n    cy: 50,\n    r: 42,\n    fill: \"transparent\"\n  }, props));\n};\n\nif (__DEV__) {\n  Circle.displayName = \"Circle\";\n}\n\nvar Shape = function Shape(props) {\n  var size = props.size,\n      isIndeterminate = props.isIndeterminate,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$1);\n\n  return /*#__PURE__*/React.createElement(chakra.svg, _extends({\n    viewBox: \"0 0 100 100\",\n    __css: {\n      width: size,\n      height: size,\n      animation: isIndeterminate ? rotate + \" 2s linear infinite\" : undefined\n    }\n  }, rest));\n};\n\nif (__DEV__) {\n  Shape.displayName = \"Shape\";\n}\n\n/**\n * CircularProgress is used to indicate the progress of an activity.\n * It is built using `svg` and `circle` components with support for\n * theming and `indeterminate` state\n *\n * @see Docs https://chakra-ui.com/circularprogress\n * @todo add theming support for circular progress\n */\nvar CircularProgress = function CircularProgress(props) {\n  var _progress$percent;\n\n  var _props$size = props.size,\n      size = _props$size === void 0 ? \"48px\" : _props$size,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 100 : _props$max,\n      _props$min = props.min,\n      min = _props$min === void 0 ? 0 : _props$min,\n      valueText = props.valueText,\n      getValueText = props.getValueText,\n      value = props.value,\n      capIsRound = props.capIsRound,\n      children = props.children,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? \"10px\" : _props$thickness,\n      _props$color = props.color,\n      color = _props$color === void 0 ? \"#0078d4\" : _props$color,\n      _props$trackColor = props.trackColor,\n      trackColor = _props$trackColor === void 0 ? \"#edebe9\" : _props$trackColor,\n      isIndeterminate = props.isIndeterminate,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2$1);\n\n  var progress = getProgressProps({\n    min: min,\n    max: max,\n    value: value,\n    valueText: valueText,\n    getValueText: getValueText,\n    isIndeterminate: isIndeterminate\n  });\n  var determinant = isIndeterminate ? undefined : ((_progress$percent = progress.percent) != null ? _progress$percent : 0) * 2.64;\n  var strokeDasharray = isUndefined(determinant) ? undefined : determinant + \" \" + (264 - determinant);\n  var indicatorProps = isIndeterminate ? {\n    css: {\n      animation: spin + \" 1.5s linear infinite\"\n    }\n  } : {\n    strokeDashoffset: 66,\n    strokeDasharray: strokeDasharray,\n    transitionProperty: \"stroke-dasharray, stroke\",\n    transitionDuration: \"0.6s\",\n    transitionTimingFunction: \"ease\"\n  };\n  var rootStyles = {\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    fontSize: size\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    className: \"chakra-progress\"\n  }, progress.bind, rest, {\n    __css: rootStyles\n  }), /*#__PURE__*/React.createElement(Shape, {\n    size: size,\n    isIndeterminate: isIndeterminate\n  }, /*#__PURE__*/React.createElement(Circle, {\n    stroke: trackColor,\n    strokeWidth: thickness,\n    className: \"chakra-progress__track\"\n  }), /*#__PURE__*/React.createElement(Circle, _extends({\n    stroke: color,\n    strokeWidth: thickness,\n    className: \"chakra-progress__indicator\",\n    strokeLinecap: capIsRound ? \"round\" : undefined\n    /**\n     * fix issue in Safari where indictor still shows when value is 0\n     * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3754\n     */\n    ,\n    opacity: progress.value === 0 && !isIndeterminate ? 0 : undefined\n  }, indicatorProps))), children);\n};\n\nif (__DEV__) {\n  CircularProgress.displayName = \"CircularProgress\";\n}\n/**\n * CircularProgress component label. In most cases it is a numeric indicator\n * of the circular progress component's value\n */\n\n\nvar CircularProgressLabel = chakra(\"div\", {\n  baseStyle: {\n    fontSize: \"0.24em\",\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\"\n  }\n});\n\nif (__DEV__) {\n  CircularProgressLabel.displayName = \"CircularProgressLabel\";\n}\n\nvar _excluded = [\"min\", \"max\", \"value\", \"isIndeterminate\"],\n    _excluded2 = [\"value\", \"min\", \"max\", \"hasStripe\", \"isAnimated\", \"children\", \"borderRadius\", \"isIndeterminate\", \"aria-label\", \"aria-labelledby\"];\n\n/**\n * ProgressLabel is used to show the numeric value of the progress.\n * @see Docs https://chakra-ui.com/progress\n */\nvar ProgressLabel = function ProgressLabel(props) {\n  var styles = useStyles();\n\n  var labelStyles = _extends({\n    top: \"50%\",\n    left: \"50%\",\n    width: \"100%\",\n    textAlign: \"center\",\n    position: \"absolute\",\n    transform: \"translate(-50%, -50%)\"\n  }, styles.label);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, props, {\n    __css: labelStyles\n  }));\n};\n\nif (__DEV__) {\n  ProgressLabel.displayName = \"ProgressLabel\";\n}\n\n/**\n * ProgressFilledTrack (Linear)\n *\n * The progress component that visually indicates the current level of the progress bar.\n * It applies `background-color` and changes its width.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nvar ProgressFilledTrack = function ProgressFilledTrack(props) {\n  var min = props.min,\n      max = props.max,\n      value = props.value,\n      isIndeterminate = props.isIndeterminate,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var progress = getProgressProps({\n    value: value,\n    min: min,\n    max: max,\n    isIndeterminate: isIndeterminate\n  });\n  var styles = useStyles();\n\n  var trackStyles = _extends({\n    height: \"100%\"\n  }, styles.filledTrack);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    style: _extends({\n      width: progress.percent + \"%\"\n    }, rest.style)\n  }, progress.bind, rest, {\n    __css: trackStyles\n  }));\n};\n\n/**\n * Progress (Linear)\n *\n * Progress is used to display the progress status for a task that takes a long\n * time or consists of several steps.\n *\n * It includes accessible attributes to help assistive technologies understand\n * and speak the progress values.\n *\n * @see Docs https://chakra-ui.com/progress\n */\nvar Progress = function Progress(props) {\n  var _styles$track;\n\n  var _omitThemingProps = omitThemingProps(props),\n      value = _omitThemingProps.value,\n      _omitThemingProps$min = _omitThemingProps.min,\n      min = _omitThemingProps$min === void 0 ? 0 : _omitThemingProps$min,\n      _omitThemingProps$max = _omitThemingProps.max,\n      max = _omitThemingProps$max === void 0 ? 100 : _omitThemingProps$max,\n      hasStripe = _omitThemingProps.hasStripe,\n      isAnimated = _omitThemingProps.isAnimated,\n      children = _omitThemingProps.children,\n      propBorderRadius = _omitThemingProps.borderRadius,\n      isIndeterminate = _omitThemingProps.isIndeterminate,\n      ariaLabel = _omitThemingProps[\"aria-label\"],\n      ariaLabelledBy = _omitThemingProps[\"aria-labelledby\"],\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded2);\n\n  var styles = useMultiStyleConfig(\"Progress\", props);\n  var borderRadius = propBorderRadius != null ? propBorderRadius : (_styles$track = styles.track) == null ? void 0 : _styles$track.borderRadius;\n  var stripeAnimation = {\n    animation: stripe + \" 1s linear infinite\"\n  };\n  /**\n   * We should not use stripe if it is `indeterminate`\n   */\n\n  var shouldAddStripe = !isIndeterminate && hasStripe;\n  var shouldAnimateStripe = shouldAddStripe && isAnimated;\n  /**\n   * Generate styles for stripe and stripe animation\n   */\n\n  var css = _extends({}, shouldAnimateStripe && stripeAnimation, isIndeterminate && {\n    position: \"absolute\",\n    willChange: \"left\",\n    minWidth: \"50%\",\n    animation: progress + \" 1s ease infinite normal none running\"\n  });\n\n  var trackStyles = _extends({\n    overflow: \"hidden\",\n    position: \"relative\"\n  }, styles.track);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    borderRadius: borderRadius,\n    __css: trackStyles\n  }, rest), /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(ProgressFilledTrack, {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    min: min,\n    max: max,\n    value: value,\n    isIndeterminate: isIndeterminate,\n    css: css,\n    borderRadius: borderRadius\n  }), children));\n};\n\nif (__DEV__) {\n  Progress.displayName = \"Progress\";\n}\n\nexport { CircularProgress, CircularProgressLabel, Progress, ProgressLabel };\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar observerMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = undefined;\n/**\r\n * What should be the default behavior if the IntersectionObserver is unsupported?\r\n * Ideally the polyfill has been loaded, you can have the following happen:\r\n * - `undefined`: Throw an error\r\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\r\n * **/\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @param fallbackInView - Fallback inView value.\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options, fallbackInView) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (fallbackInView === void 0) {\n    fallbackInView = unsupportedValue;\n  }\n\n  if (typeof window.IntersectionObserver === 'undefined' && fallbackInView !== undefined) {\n    var bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return function () {// Nothing to cleanup\n    };\n  } // An observer with the same options can be reused, so lets use this fact\n\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap[\"delete\"](id);\n    }\n  };\n}\n\nvar _excluded = [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\", \"fallbackInView\"];\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay,\n        fallbackInView = _this$props.fallbackInView;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    }, fallbackInView);\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n\n    return /*#__PURE__*/React.createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(React.Component);\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView,\n      fallbackInView = _ref.fallbackInView;\n\n  var unobserve = React.useRef();\n\n  var _React$useState = React.useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = React.useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      }, fallbackInView);\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, InView as default, defaultFallbackInView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.m.js.map\n","import { __spreadArray, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.mjs';\nimport { setValues } from '../render/utils/setters.mjs';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    var hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    var pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    var subscribers = new Set();\n    var controls = {\n        subscribe: function (visualElement) {\n            subscribers.add(visualElement);\n            return function () { return void subscribers.delete(visualElement); };\n        },\n        start: function (definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                var animations_1 = [];\n                subscribers.forEach(function (visualElement) {\n                    animations_1.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride: transitionOverride,\n                    }));\n                });\n                return Promise.all(animations_1);\n            }\n            else {\n                return new Promise(function (resolve) {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve: resolve,\n                    });\n                });\n            }\n        },\n        set: function (definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach(function (visualElement) {\n                setValues(visualElement, definition);\n            });\n        },\n        stop: function () {\n            subscribers.forEach(function (visualElement) {\n                stopAnimation(visualElement);\n            });\n        },\n        mount: function () {\n            hasMounted = true;\n            pendingAnimations.forEach(function (_a) {\n                var animation = _a.animation, resolve = _a.resolve;\n                controls.start.apply(controls, __spreadArray([], __read(animation), false)).then(resolve);\n            });\n            return function () {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimation() {\n    var controls = useConstant(animationControls);\n    useEffect(controls.mount, []);\n    return controls;\n}\n\nexport { useAnimation };\n"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","strokeDasharray","strokeDashoffset","rotate","transform","progress","left","stripe","from","backgroundPosition","to","getProgressProps","options","_options$value","value","min","max","valueText","getValueText","isIndeterminate","percent","bind","undefined","getAriaValueText","role","_excluded$1","Circle","props","cx","cy","r","fill","displayName","Shape","size","rest","viewBox","__css","width","height","animation","CircularProgressLabel","baseStyle","fontSize","top","textAlign","position","_excluded","_excluded2","ProgressFilledTrack","trackStyles","filledTrack","style","Progress","_styles$track","_omitThemingProps","_omitThemingProps$min","_omitThemingProps$max","hasStripe","isAnimated","children","propBorderRadius","borderRadius","ariaLabel","ariaLabelledBy","styles","track","css","willChange","minWidth","overflow","_setPrototypeOf","o","p","setPrototypeOf","__proto__","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","sort","filter","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","_createObserver","id","instance","thresholds","elements","observer","entries","forEach","entry","_elements$get","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","unobserve","disconnect","isPlainChildren","InView","_React$Component","subClass","superClass","_this","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","create","constructor","_proto","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_this$props","render","_this$state","ref","_this$props2","as","tag","useInView","_temp","_ref","_React$useState","setRef","current","useEffect","result","defaultProps","animationControls","hasMounted","pendingAnimations","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","animations_1","Promise","all","resolve","stop","mount","_a","then","useAnimation"],"sourceRoot":""}