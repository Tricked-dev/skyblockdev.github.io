{"version":3,"file":"static/chunks/363-5ad0c9ac80986a63.js","mappings":"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","sources":["webpack://_N_E/./components/aethainer.tsx","webpack://_N_E/./components/Link.tsx","webpack://_N_E/./components/nav.tsx","webpack://_N_E/./components/footer.tsx","webpack://_N_E/./components/container.tsx"],"sourcesContent":["import Head from \"next/head\";\n// import { Box, HStack, Text, IconButton, Flex, Button, useColorMode, useDisclosure, Stack, Container, Avatar, Link as ChakraLink } from \"@chakra-ui/react\";\n// import { HamburgerIcon, CloseIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport Footer from \"./footer\";\nimport Link from \"./Link\";\nimport Container from \"./container\";\nconst Links = [\n  {\n    name: \"Commands\",\n    route: \"/aethor/general\",\n  },\n  {\n    name: \"Invite\",\n    route: \"/aethor/invite\",\n  },\n  {\n    name: \"Support\",\n    route: \"/aethor/support\",\n  },\n  {\n    name: \"Back to main page\",\n    route: \"/\",\n  },\n];\nconst meta = {\n  title: \"Aethor\",\n  description: `Aethor is the best discord bot for all your needs`,\n  type: \"website\",\n  themeColor: \"#317EFB\",\n  keywords: \"discord bot discordbot aethor tricked.pro\",\n  viewport: \"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\",\n};\nexport default function Cont({ children }: any) {\n  return (\n    <Container Links={Links} TextValue={\"Aethor\"} {...meta}>\n      {children}\n    </Container>\n  );\n}\n// export default function Cont({ children }: any) {\n//   const meta = {\n//     title: \"Aethor\",\n//     description: `Aethor is the best discord bot for all your needs`,\n//     type: \"website\",\n//     themeColor: \"#317EFB\",\n//     keywords: \"discord bot discordbot aethor tricked.pro\",\n//     viewport: \"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\",\n//   };\n//   const { isOpen, onOpen, onClose } = useDisclosure();\n//   const { colorMode, toggleColorMode } = useColorMode();\n\n//   const navigationItem = (\n//     <>\n//       {Links.map((link) => (\n//         <Link href={link.route} key={link.name} p={2} rounded={\"md\"}>\n//           {link.name}\n//         </Link>\n//       ))}\n//     </>\n//   );\n\n//   return (\n//     <>\n//       <Head>\n//         <title>{meta.title}</title>\n\n//         <meta charSet=\"utf-8\" />\n//         <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n//         <meta name=\"viewport\" content={meta.viewport} />\n//         <meta name=\"keywords\" content={meta.keywords} />\n//         <meta name=\"theme-color\" content={meta.themeColor} />\n\n//         <meta name=\"favicon\" content=\"aethor.ico\" />\n//         <meta name=\"robots\" content=\"follow, index\" />\n//         <meta content={meta.description} name=\"description\" />\n\n//         <meta property=\"og:url\" content={`https://aethor.tricked.pro}`} />\n//         <meta property=\"og:type\" content={meta.type} />\n//         <meta property=\"og:site_name\" content={meta.title} />\n//         <meta property=\"og:description\" content={meta.description} />\n//         <meta property=\"og:title\" content={meta.title} />\n\n//         <meta name=\"twitter:card\" content=\"summary_large_image\" />\n//         <meta name=\"twitter:site\" content=\"@tricked\" />\n//         <meta name=\"twitter:title\" content={meta.title} />\n//         <meta name=\"twitter:description\" content={meta.description} />\n//       </Head>\n//       <Box py={5} borderTop=\"2px\" borderTopColor=\"green.500\">\n//         <Container maxW=\"container.lg\">\n//           <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n//             <IconButton size={\"md\"} icon={isOpen ? <CloseIcon /> : <HamburgerIcon />} aria-label={\"Open Menu\"} display={{ md: !isOpen ? \"none\" : \"inherit\" }} onClick={isOpen ? onClose : onOpen} />\n//             <HStack spacing={8} alignItems={\"center\"}>\n//               <HStack as={\"nav\"} spacing={4} display={{ base: \"none\", md: \"flex\" }}>\n//                 <Text>\n//                   <Flex alignItems=\"center\">\n//                     <Avatar src=\"/aethor.png\" size=\"sm\" />\n//                     <b>Aethor</b>\n//                   </Flex>\n//                 </Text>\n\n//                 {navigationItem}\n//               </HStack>\n//             </HStack>\n//             <Flex alignItems={\"center\"}>\n//               <Button aria-label=\"Switch Theme\" onClick={toggleColorMode}>\n//                 {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n//               </Button>\n//             </Flex>\n//           </Flex>\n\n//           {isOpen ? (\n//             <Box pb={4} mt={3}>\n//               <Stack as={\"nav\"} spacing={4}>\n//                 {navigationItem}\n//               </Stack>\n//             </Box>\n//           ) : null}\n//         </Container>\n//       </Box>\n\n//       {children}\n//       <Footer />\n//     </>\n//   );\n// }\n","import NextLink from \"next/link\";\nimport { Link as ChakraLink, Box, Center } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nconst Link = ({ children, href, currentPath, lang = \"en\", active, ...props }: any) => {\n  const [expended, setExpended] = useState(false);\n\n  return (\n    <NextLink passHref prefetch={false} href={`/[lang]${href}`} as={`/${lang}${href}`}>\n      <ChakraLink\n        bg={href === \"gray.700\"}\n        onMouseEnter={() => setExpended(true)}\n        onMouseLeave={() => setExpended(false)}\n        _hover={{\n          textDecoration: \"none\",\n          bg: \"gray.700\",\n        }}\n        {...props}\n      >\n        {children}\n        <Center>\n          <Box width={expended ? \"100%\" : \"2rem\"} maxW=\"100%\" borderBottomWidth=\"4px\" borderRadius=\"10px\" borderBottomColor={active ? \"brand.700\" : \"brand.600\"} />\n        </Center>\n        {/* {!expended && <Box as={motion.div} data-isOpen={isOpen} initial={{ borderRadius: 50 }} borderBottomWidth=\"3px\" borderBottomRadius=\"3px\" borderBottomColor={active ? \"brand.700\" : \"brand.600\"}></Box>} */}\n      </ChakraLink>\n    </NextLink>\n  );\n};\n\nexport default Link;\n","import { Box, Flex, HStack, IconButton, Button, useColorMode, Text, useDisclosure, Stack, Container } from \"@chakra-ui/react\";\nimport Link from \"./Link\";\nimport { HamburgerIcon, CloseIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\n\nconst Links = [\n  {\n    name: \"Home\",\n    route: \"/\",\n  },\n  {\n    name: \"Projects\",\n    route: \"/projects\",\n  },\n  {\n    name: \"Posts\",\n    route: \"/posts\",\n  },\n  // {\n  //   name: \"Aethor\",\n  //   route: \"/aethor\",\n  // },\n];\n\nconst Navbar = ({ links = Links, lang = \"en\", TextValue = \"Tricked.pro\" }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { colorMode, toggleColorMode: SetToggleColorMode } = useColorMode();\n  const router = useRouter();\n\n  const navigationItem = (\n    <>\n      {links.map((link) => (\n        <Link lang={lang} href={link.route} active={router.pathname == link.route} key={link.name} p={2} rounded={\"md\"}>\n          {link.name}\n        </Link>\n      ))}\n    </>\n  );\n  useEffect(() => {\n    if (window.document)\n      if (colorMode == \"light\") {\n        document.documentElement.classList.remove(\"dark\");\n      } else {\n        document.documentElement.classList.add(\"dark\");\n      }\n  });\n  function toggleColorMode() {\n    SetToggleColorMode();\n    localStorage.theme = colorMode;\n    if (colorMode == \"light\") {\n      document.documentElement.classList.remove(\"dark\");\n    } else {\n      document.documentElement.classList.add(\"dark\");\n    }\n  }\n\n  return (\n    <>\n      <Box py={5} borderTop=\"2px\" borderTopColor=\"green.500\">\n        <Container maxW=\"container.lg\">\n          <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n            <IconButton size={\"md\"} icon={isOpen ? <CloseIcon /> : <HamburgerIcon />} aria-label={\"Open Menu\"} display={{ md: !isOpen ? \"none\" : \"inherit\" }} onClick={isOpen ? onClose : onOpen} />\n            <HStack spacing={8} alignItems={\"center\"}>\n              <HStack as={\"nav\"} spacing={4} display={{ base: \"none\", md: \"flex\" }}>\n                <Text>\n                  <b>{TextValue}</b>\n                </Text>\n\n                {navigationItem}\n              </HStack>\n            </HStack>\n            <Flex alignItems={\"center\"}>\n              <Button aria-label=\"Switch Theme\" onClick={toggleColorMode}>\n                {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n              </Button>\n            </Flex>\n          </Flex>\n\n          {isOpen ? (\n            <Box pb={4} mt={3}>\n              <Stack as={\"nav\"} spacing={4}>\n                {navigationItem}\n              </Stack>\n            </Box>\n          ) : null}\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Navbar;\n","import Link from \"next/link\";\n\nlet items = [\n  {\n    n: \"Matrix\",\n    h: \"/matrix\",\n    i: false,\n  },\n  {\n    n: \"Discord\",\n    h: \"/discord\",\n    i: false,\n  },\n  {\n    n: \"Github\",\n    h: \"/github\",\n    i: false,\n  },\n  {\n    n: \"Donate\",\n    h: \"/donating\",\n    i: true,\n  },\n];\n\nexport default function Footer({ lang = \"en\" }: any) {\n  return (\n    <footer className=\"flex flex-col justify-center items-start max-w-2xl mx-auto w-full mb-8\">\n      <hr className=\"w-full border-1 border-gray-200 dark:border-gray-800 mb-8\" />\n      <div className=\"w-full max-w-2xl grid grid-cols-1 gap-4 pb-16 sm:grid-cols-3\">\n        {items.map((x, y) => (\n          <div className=\"flex flex-col space-y-4\" key={y}>\n            {x.i && (\n              <Link href={`/[lang]${x.h}`} as={`/${lang}${x.h}`}>\n                {x.n}\n              </Link>\n            )}\n            {!x.i && <Link href={x.h}>{x.n}</Link>}\n          </div>\n        ))}\n      </div>\n      <div className=\"w-full max-w-2xl grid grid-cols-1 gap-4 pb-16 sm:grid-cols-3\"></div>\n    </footer>\n  );\n}\n","import Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\nimport Nav from \"./nav\";\nimport NextLink from \"next/link\";\n\nimport Footer from \"./footer\";\n\nconst langMeta = {\n  en: {\n    description: `Hello i'm Tricked im a Rust and Typescript developer, my github is Tricked-dev`,\n  },\n  nl: {\n    description: `Hallo ik ben Tricked ik ben een Rust en Typescript developer, mijn github is Tricked-dev`,\n  },\n};\n\nexport default function Container(props: any) {\n  const { children, Links, TextValue, DontforceWidth = false, lang, ...customMeta } = props;\n  const router = useRouter();\n\n  const meta = {\n    title: \"Tricked.pro\",\n    type: \"website\",\n    themeColor: \"#317EFB\",\n    keywords: \"javascript typescript programming rust discord matrix\",\n    viewport: \"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\",\n    icon: \"favicon.ico\",\n    image: `/cards/${router.route.replace(\"/\", \"\").replace(/\\//gim, \"_\")}.png`,\n    ...langMeta[\"en\"],\n    ...langMeta[lang as keyof typeof langMeta],\n    ...customMeta,\n  };\n\n  return (\n    <div>\n      <Head>\n        <html lang={lang} />\n        <title>{meta.title}</title>\n        <meta name=\"msapplication-TileColor\" content={meta.themeColor} />\n        <link rel=\"canonical\" href={`https://tricked.pro${router.asPath}`} />\n        <meta name=\"viewport\" content={meta.viewport} />\n        <meta name=\"keywords\" content={meta.keywords} />\n        <meta name=\"theme-color\" content={meta.themeColor} />\n        <meta name=\"description\" content={meta.description} />\n        <link rel=\"icon\" href={meta.icon} type=\"image/ico\" />\n        <meta property=\"og:url\" content={`https://tricked.pro${router.asPath}`} />\n        <meta property=\"og:type\" content={meta.type} />\n        <meta property=\"og:site_name\" content={meta.title} />\n        <meta property=\"og:description\" content={meta.description} />\n        <meta property=\"og:title\" content={meta.title} />\n        <meta property=\"og:image\" content={meta.image} />\n        <meta name=\"twitter:title\" content={meta.title} />\n        <meta name=\"twitter:description\" content={meta.description} />\n        <meta name=\"twitter:image\" content={meta.image} />\n        {meta.date && <meta property=\"article:published_time\" content={meta.date} />}\n      </Head>\n\n      <Nav links={Links} lang={lang} TextValue={TextValue} />\n\n      <main>\n        <Box alignItems=\"stretch\" maxW={!DontforceWidth ? \"80rem\" : \"none\"} margin=\"auto\" padding={!DontforceWidth ? \"4px 10px 40px\" : \"none\"}>\n          {children}\n        </Box>\n      </main>\n      <Footer lang={lang} />\n    </div>\n  );\n}\n"],"names":["Links","name","route","meta","title","description","type","themeColor","keywords","viewport","Cont","children","Container","TextValue","href","currentPath","lang","active","props","useState","expended","setExpended","NextLink","passHref","prefetch","as","ChakraLink","bg","onMouseEnter","onMouseLeave","_hover","textDecoration","Center","Box","width","maxW","borderBottomWidth","borderRadius","borderBottomColor","links","useDisclosure","isOpen","onOpen","onClose","useColorMode","colorMode","SetToggleColorMode","toggleColorMode","router","useRouter","navigationItem","map","link","Link","pathname","p","rounded","useEffect","window","document","documentElement","classList","remove","add","py","borderTop","borderTopColor","Flex","h","alignItems","justifyContent","IconButton","size","icon","CloseIcon","HamburgerIcon","aria-label","display","md","onClick","HStack","spacing","base","Text","b","Button","localStorage","theme","MoonIcon","SunIcon","pb","mt","Stack","items","n","i","Footer","footer","className","hr","div","x","y","langMeta","en","nl","DontforceWidth","customMeta","image","replace","Head","html","content","rel","asPath","property","date","Nav","main","margin","padding"],"sourceRoot":""}