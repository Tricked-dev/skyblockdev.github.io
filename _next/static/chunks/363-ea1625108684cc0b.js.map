{"version":3,"file":"static/chunks/363-ea1625108684cc0b.js","mappings":"+QAMA,IAAMA,EAAQ,CACZ,CACEC,KAAM,WACNC,MAAO,mBAET,CACED,KAAM,SACNC,MAAO,kBAET,CACED,KAAM,UACNC,MAAO,mBAET,CACED,KAAM,oBACNC,MAAO,MAGLC,EAAO,CACXC,MAAO,SACPC,YAAc,oDACdC,KAAM,UACNC,WAAY,UACZC,SAAU,4CACVC,SAAU,uFAEG,SAASC,EAAK,G,IAAEC,EAAF,EAAEA,SAC7B,OAAM,SACHC,EAAAA,E,uUAAS,EAACZ,MAAOA,EAAOa,UAAW,UAAcV,EAAI,C,SACnDQ,O,s8BC/BP,IAyBA,EAzBa,SAAQ,G,IAALA,EAAQ,EAARA,SAAUG,EAAI,EAAJA,KAAmB,GAAF,EAAXC,YAAW,EAAEC,MAAAA,OAAI,IAAG,OAAI,EAAEC,EAAM,EAANA,OAAWC,EAAK,KAA1DP,WAAUG,OAAMC,cAAaC,OAAaC,WACxBE,GAAAA,EAAAA,EAAAA,WAAS,GAAlCC,EAAyBD,EAAe,GAA9BE,EAAeF,EAAe,GAE/C,OAAM,SACHG,EAAAA,QAAQ,CAACC,UAAQ,EAACC,UAAU,EAAOV,KAAO,UAAc,OAALA,GAAQW,GAAK,IAAUX,OAAPE,GAAY,OAALF,G,oBACxEY,EAAAA,GAAU,GACTC,GAAa,aAATb,EACJc,aAAc,WAAMP,OAAAA,GAAY,IAChCQ,aAAc,WAAMR,OAAAA,GAAY,IAChCS,OAAQ,CACNC,eAAgB,OAChBJ,GAAI,aAEFT,EAAK,C,UAERP,G,SACAqB,EAAAA,GAAM,C,mBACJC,EAAAA,GAAG,CAACC,MAAOd,EAAW,OAAS,OAAQe,KAAK,OAAOC,kBAAkB,MAAMC,aAAa,OAAOC,kBAAmBrB,EAAS,YAAc,uB,UChB9IjB,EAAQ,CACZ,CACEC,KAAM,OACNC,MAAO,KAET,CACED,KAAM,WACNC,MAAO,aAET,CACED,KAAM,QACNC,MAAO,WA0DX,EAlDe,SAAQ,G,QAALqC,MAAAA,OAAK,IAAG,EAAAvC,EAAK,MAAEgB,KAAAA,OAAI,IAAG,OAAI,MAAEH,UAAAA,OAAS,IAAG,gBAAa,EACjC2B,GAAAA,EAAAA,EAAAA,MAA5BC,EAA4BD,EAA5BC,OAAQC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACeC,GAAAA,EAAAA,EAAAA,MAA/BC,EAA+BD,EAA/BC,UAAWC,EAAoBF,EAApBE,gBACbC,GAASC,EAAAA,EAAAA,aAETC,GAAc,qB,SAEfV,EAAMW,KAAI,SAACC,GACV,OAAMnC,EAAAA,EAAAA,KAALoC,EAAI,CAACpC,KAAMA,EAAMF,KAAMqC,EAAKjD,MAAOe,OAAQ8B,EAAOM,UAAYF,EAAKjD,MAAuBoD,EAAG,EAAGC,QAAS,K,SACvGJ,EAAKlD,MADwEkD,EAAKlD,WAO3F,OAAM,qB,mBAEDgC,EAAAA,GAAG,CAACuB,GAAI,EAAGC,UAAU,MAAMC,eAAe,Y,oBACxC9C,EAAAA,GAAS,CAACuB,KAAK,e,qBACbwB,EAAAA,GAAI,CAACC,EAAG,GAAIC,WAAY,SAAUC,eAAgB,gB,oBAChDC,EAAAA,GAAU,CAACC,KAAM,KAAMC,KAAMxB,GAAM,SAAIyB,EAAAA,GAAS,K,SAAOC,EAAAA,GAAa,IAAKC,aAAY,YAAaC,QAAS,CAAEC,GAAK7B,EAAkB,UAAT,QAAsB8B,QAAS9B,EAASE,EAAUD,K,SAC7K8B,EAAAA,GAAM,CAACC,QAAS,EAAGZ,WAAY,S,oBAC7BW,EAAAA,GAAM,CAAC/C,GAAI,MAAOgD,QAAS,EAAGJ,QAAS,CAAEK,KAAM,OAAQJ,GAAI,Q,oBACzDK,EAAAA,GAAI,C,mBACFC,IAAC,C,SAAE/D,MAGLoC,Q,SAGJU,EAAAA,GAAI,CAACE,WAAY,S,mBACfgB,EAAAA,GAAM,CAACT,aAAW,eAAeG,QAASzB,E,SAC1B,UAAdD,GAAqB,SAAIiC,EAAAA,GAAQ,K,SAAOC,EAAAA,GAAO,WAKrDtC,GAAM,SACJR,EAAAA,GAAG,CAAC+C,GAAI,EAAGC,GAAI,E,mBACbC,EAAAA,GAAK,CAACzD,GAAI,MAAOgD,QAAS,E,SACxBxB,MAGH,aCjEVkC,EAAQ,CACV,CACEC,EAAG,SACHxB,EAAG,UACHyB,GAAG,GAEL,CACED,EAAG,UACHxB,EAAG,WACHyB,GAAG,GAEL,CACED,EAAG,SACHxB,EAAG,UACHyB,GAAG,GAEL,CACED,EAAG,SACHxB,EAAG,YACHyB,GAAG,IAIQ,SAASC,EAAO,G,MAAA,EAAEtE,KAAAA,OAAI,IAAG,OAAI,EAC1C,OAAM,UACHuE,SAAM,CAACC,UAAU,yE,oBACfC,KAAE,CAACD,UAAU,+D,SACbE,MAAG,CAACF,UAAU,+D,SACZL,EAAMjC,KAAI,SAACyC,EAAGC,GACb,OAAM,UAALF,MAAG,CAACF,UAAU,0B,UACZG,EAAEN,IAAC,SACDjC,EAAAA,QAAI,CAACtC,KAAO,UAAa,OAAJ6E,EAAE/B,GAAKnC,GAAK,IAAUkE,OAAP3E,GAAW,OAAJ2E,EAAE/B,G,SAC3C+B,EAAEP,KAGLO,EAAEN,IAAC,SAAKjC,EAAAA,QAAI,CAACtC,KAAM6E,EAAE/B,E,SAAI+B,EAAEP,MANeQ,S,SAUjDF,MAAG,CAACF,UAAU,oE,4eChCrB,IAAMK,EAAW,CACfC,GAAI,CACFzF,YAAc,kFAEhB0F,GAAI,CACF1F,YAAc,6FAIH,SAASO,EAAUM,GAChC,IAAQP,EAA4EO,EAA5EP,SAAUX,EAAkEkB,EAAlElB,MAAOa,EAA2DK,EAA3DL,UAAW,EAAgDK,EAAhD8E,eAAAA,OAAc,IAAG,GAAK,EAAEhF,EAAwBE,EAAxBF,KAASiF,EAAU,EAAK/E,EAAK,CAAjFP,WAAUX,QAAOa,YAAWmF,iBAAwBhF,SACtD+B,GAASC,EAAAA,EAAAA,aAET7C,E,uUAAO,EACXC,MAAO,cACPE,KAAM,UACNC,WAAY,UACZC,SAAU,wDACVC,SAAU,sFACVwD,KAAM,cACNiC,MAAQ,UAA6D,OAApDnD,EAAO7C,MAAMiG,QAAQ,IAAK,IAAIA,QAAQ,QAAS,KAAK,SAClEN,EAAa,GACbA,EAAS7E,GACTiF,GAGL,OAAM,UACHP,MAAG,C,qBACDU,EAAAA,QAAI,C,oBACFC,OAAI,CAACrF,KAAMA,K,SACXZ,QAAK,C,SAAED,EAAKC,S,SACZD,OAAI,CAACF,KAAK,0BAA0BqG,QAASnG,EAAKI,c,SAClD4C,OAAI,CAACoD,IAAI,YAAYzF,KAAO,sBAAmC,OAAdiC,EAAOyD,W,SACxDrG,OAAI,CAACF,KAAK,WAAWqG,QAASnG,EAAKM,Y,SACnCN,OAAI,CAACF,KAAK,WAAWqG,QAASnG,EAAKK,Y,SACnCL,OAAI,CAACF,KAAK,cAAcqG,QAASnG,EAAKI,c,SACtCJ,OAAI,CAACF,KAAK,cAAcqG,QAASnG,EAAKE,e,SACtC8C,OAAI,CAACoD,IAAI,OAAOzF,KAAMX,EAAK8D,KAAM3D,KAAK,e,SACtCH,OAAI,CAACsG,SAAS,SAASH,QAAU,sBAAmC,OAAdvD,EAAOyD,W,SAC7DrG,OAAI,CAACsG,SAAS,UAAUH,QAASnG,EAAKG,Q,SACtCH,OAAI,CAACsG,SAAS,eAAeH,QAASnG,EAAKC,S,SAC3CD,OAAI,CAACsG,SAAS,iBAAiBH,QAASnG,EAAKE,e,SAC7CF,OAAI,CAACsG,SAAS,WAAWH,QAASnG,EAAKC,S,SACvCD,OAAI,CAACsG,SAAS,WAAWH,QAASnG,EAAK+F,S,SACvC/F,OAAI,CAACF,KAAK,gBAAgBqG,QAASnG,EAAKC,S,SACxCD,OAAI,CAACF,KAAK,sBAAsBqG,QAASnG,EAAKE,e,SAC9CF,OAAI,CAACF,KAAK,gBAAgBqG,QAASnG,EAAK+F,QACxC/F,EAAKuG,OAAI,SAAKvG,OAAI,CAACsG,SAAS,yBAAyBH,QAASnG,EAAKuG,W,SAGrEC,EAAG,CAACpE,MAAOvC,EAAOgB,KAAMA,EAAMH,UAAWA,K,SAEzC+F,OAAI,C,mBACF3E,EAAAA,GAAG,CAAC4B,WAAW,UAAU1B,KAAO6D,EAA2B,OAAV,QAAkBa,OAAO,OAAOC,QAAUd,EAAmC,OAAlB,gB,SAC1GrF,O,SAGJ2E,EAAM,CAACtE,KAAMA","sources":["webpack://_N_E/./components/aethainer.tsx","webpack://_N_E/./components/Link.tsx","webpack://_N_E/./components/nav.tsx","webpack://_N_E/./components/footer.tsx","webpack://_N_E/./components/container.tsx"],"sourcesContent":["import Head from \"next/head\";\n// import { Box, HStack, Text, IconButton, Flex, Button, useColorMode, useDisclosure, Stack, Container, Avatar, Link as ChakraLink } from \"@chakra-ui/react\";\n// import { HamburgerIcon, CloseIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport Footer from \"./footer\";\nimport Link from \"./Link\";\nimport Container from \"./container\";\nconst Links = [\n  {\n    name: \"Commands\",\n    route: \"/aethor/general\",\n  },\n  {\n    name: \"Invite\",\n    route: \"/aethor/invite\",\n  },\n  {\n    name: \"Support\",\n    route: \"/aethor/support\",\n  },\n  {\n    name: \"Back to main page\",\n    route: \"/\",\n  },\n];\nconst meta = {\n  title: \"Aethor\",\n  description: `Aethor is the best discord bot for all your needs`,\n  type: \"website\",\n  themeColor: \"#317EFB\",\n  keywords: \"discord bot discordbot aethor tricked.pro\",\n  viewport: \"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\",\n};\nexport default function Cont({ children }: any) {\n  return (\n    <Container Links={Links} TextValue={\"Aethor\"} {...meta}>\n      {children}\n    </Container>\n  );\n}\n// export default function Cont({ children }: any) {\n//   const meta = {\n//     title: \"Aethor\",\n//     description: `Aethor is the best discord bot for all your needs`,\n//     type: \"website\",\n//     themeColor: \"#317EFB\",\n//     keywords: \"discord bot discordbot aethor tricked.pro\",\n//     viewport: \"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\",\n//   };\n//   const { isOpen, onOpen, onClose } = useDisclosure();\n//   const { colorMode, toggleColorMode } = useColorMode();\n\n//   const navigationItem = (\n//     <>\n//       {Links.map((link) => (\n//         <Link href={link.route} key={link.name} p={2} rounded={\"md\"}>\n//           {link.name}\n//         </Link>\n//       ))}\n//     </>\n//   );\n\n//   return (\n//     <>\n//       <Head>\n//         <title>{meta.title}</title>\n\n//         <meta charSet=\"utf-8\" />\n//         <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n//         <meta name=\"viewport\" content={meta.viewport} />\n//         <meta name=\"keywords\" content={meta.keywords} />\n//         <meta name=\"theme-color\" content={meta.themeColor} />\n\n//         <meta name=\"favicon\" content=\"aethor.ico\" />\n//         <meta name=\"robots\" content=\"follow, index\" />\n//         <meta content={meta.description} name=\"description\" />\n\n//         <meta property=\"og:url\" content={`https://aethor.tricked.pro}`} />\n//         <meta property=\"og:type\" content={meta.type} />\n//         <meta property=\"og:site_name\" content={meta.title} />\n//         <meta property=\"og:description\" content={meta.description} />\n//         <meta property=\"og:title\" content={meta.title} />\n\n//         <meta name=\"twitter:card\" content=\"summary_large_image\" />\n//         <meta name=\"twitter:site\" content=\"@tricked\" />\n//         <meta name=\"twitter:title\" content={meta.title} />\n//         <meta name=\"twitter:description\" content={meta.description} />\n//       </Head>\n//       <Box py={5} borderTop=\"2px\" borderTopColor=\"green.500\">\n//         <Container maxW=\"container.lg\">\n//           <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n//             <IconButton size={\"md\"} icon={isOpen ? <CloseIcon /> : <HamburgerIcon />} aria-label={\"Open Menu\"} display={{ md: !isOpen ? \"none\" : \"inherit\" }} onClick={isOpen ? onClose : onOpen} />\n//             <HStack spacing={8} alignItems={\"center\"}>\n//               <HStack as={\"nav\"} spacing={4} display={{ base: \"none\", md: \"flex\" }}>\n//                 <Text>\n//                   <Flex alignItems=\"center\">\n//                     <Avatar src=\"/aethor.png\" size=\"sm\" />\n//                     <b>Aethor</b>\n//                   </Flex>\n//                 </Text>\n\n//                 {navigationItem}\n//               </HStack>\n//             </HStack>\n//             <Flex alignItems={\"center\"}>\n//               <Button aria-label=\"Switch Theme\" onClick={toggleColorMode}>\n//                 {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n//               </Button>\n//             </Flex>\n//           </Flex>\n\n//           {isOpen ? (\n//             <Box pb={4} mt={3}>\n//               <Stack as={\"nav\"} spacing={4}>\n//                 {navigationItem}\n//               </Stack>\n//             </Box>\n//           ) : null}\n//         </Container>\n//       </Box>\n\n//       {children}\n//       <Footer />\n//     </>\n//   );\n// }\n","import NextLink from \"next/link\";\nimport { Link as ChakraLink, Box, Center } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nconst Link = ({ children, href, currentPath, lang = \"en\", active, ...props }: any) => {\n  const [expended, setExpended] = useState(false);\n\n  return (\n    <NextLink passHref prefetch={false} href={`/[lang]${href}`} as={`/${lang}${href}`}>\n      <ChakraLink\n        bg={href === \"gray.700\"}\n        onMouseEnter={() => setExpended(true)}\n        onMouseLeave={() => setExpended(false)}\n        _hover={{\n          textDecoration: \"none\",\n          bg: \"gray.700\",\n        }}\n        {...props}\n      >\n        {children}\n        <Center>\n          <Box width={expended ? \"100%\" : \"2rem\"} maxW=\"100%\" borderBottomWidth=\"4px\" borderRadius=\"10px\" borderBottomColor={active ? \"brand.700\" : \"brand.600\"} />\n        </Center>\n        {/* {!expended && <Box as={motion.div} data-isOpen={isOpen} initial={{ borderRadius: 50 }} borderBottomWidth=\"3px\" borderBottomRadius=\"3px\" borderBottomColor={active ? \"brand.700\" : \"brand.600\"}></Box>} */}\n      </ChakraLink>\n    </NextLink>\n  );\n};\n\nexport default Link;\n","import { Box, Flex, HStack, IconButton, Button, useColorMode, Text, useDisclosure, Stack, Container } from \"@chakra-ui/react\";\nimport Link from \"./Link\";\nimport { HamburgerIcon, CloseIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport { useRouter } from \"next/router\";\n\nconst Links = [\n  {\n    name: \"Home\",\n    route: \"/\",\n  },\n  {\n    name: \"Projects\",\n    route: \"/projects\",\n  },\n  {\n    name: \"Posts\",\n    route: \"/posts\",\n  },\n  // {\n  //   name: \"Aethor\",\n  //   route: \"/aethor\",\n  // },\n];\n\nconst Navbar = ({ links = Links, lang = \"en\", TextValue = \"Tricked.pro\" }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const { colorMode, toggleColorMode } = useColorMode();\n  const router = useRouter();\n\n  const navigationItem = (\n    <>\n      {links.map((link) => (\n        <Link lang={lang} href={link.route} active={router.pathname == link.route} key={link.name} p={2} rounded={\"md\"}>\n          {link.name}\n        </Link>\n      ))}\n    </>\n  );\n\n  return (\n    <>\n      <Box py={5} borderTop=\"2px\" borderTopColor=\"green.500\">\n        <Container maxW=\"container.lg\">\n          <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n            <IconButton size={\"md\"} icon={isOpen ? <CloseIcon /> : <HamburgerIcon />} aria-label={\"Open Menu\"} display={{ md: !isOpen ? \"none\" : \"inherit\" }} onClick={isOpen ? onClose : onOpen} />\n            <HStack spacing={8} alignItems={\"center\"}>\n              <HStack as={\"nav\"} spacing={4} display={{ base: \"none\", md: \"flex\" }}>\n                <Text>\n                  <b>{TextValue}</b>\n                </Text>\n\n                {navigationItem}\n              </HStack>\n            </HStack>\n            <Flex alignItems={\"center\"}>\n              <Button aria-label=\"Switch Theme\" onClick={toggleColorMode}>\n                {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n              </Button>\n            </Flex>\n          </Flex>\n\n          {isOpen ? (\n            <Box pb={4} mt={3}>\n              <Stack as={\"nav\"} spacing={4}>\n                {navigationItem}\n              </Stack>\n            </Box>\n          ) : null}\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Navbar;\n","import Link from \"next/link\";\n\nlet items = [\n  {\n    n: \"Matrix\",\n    h: \"/matrix\",\n    i: false,\n  },\n  {\n    n: \"Discord\",\n    h: \"/discord\",\n    i: false,\n  },\n  {\n    n: \"Github\",\n    h: \"/github\",\n    i: false,\n  },\n  {\n    n: \"Donate\",\n    h: \"/donating\",\n    i: true,\n  },\n];\n\nexport default function Footer({ lang = \"en\" }: any) {\n  return (\n    <footer className=\"flex flex-col justify-center items-start max-w-2xl mx-auto w-full mb-8\">\n      <hr className=\"w-full border-1 border-gray-200 dark:border-gray-800 mb-8\" />\n      <div className=\"w-full max-w-2xl grid grid-cols-1 gap-4 pb-16 sm:grid-cols-3\">\n        {items.map((x, y) => (\n          <div className=\"flex flex-col space-y-4\" key={y}>\n            {x.i && (\n              <Link href={`/[lang]${x.h}`} as={`/${lang}${x.h}`}>\n                {x.n}\n              </Link>\n            )}\n            {!x.i && <Link href={x.h}>{x.n}</Link>}\n          </div>\n        ))}\n      </div>\n      <div className=\"w-full max-w-2xl grid grid-cols-1 gap-4 pb-16 sm:grid-cols-3\"></div>\n    </footer>\n  );\n}\n","import Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport { Box, useColorModeValue } from \"@chakra-ui/react\";\nimport Nav from \"./nav\";\nimport NextLink from \"next/link\";\n\nimport Footer from \"./footer\";\n\nconst langMeta = {\n  en: {\n    description: `Hello i'm Tricked im a Rust and Typescript developer, my github is Tricked-dev`,\n  },\n  nl: {\n    description: `Hallo ik ben Tricked ik ben een Rust en Typescript developer, mijn github is Tricked-dev`,\n  },\n};\n\nexport default function Container(props: any) {\n  const { children, Links, TextValue, DontforceWidth = false, lang, ...customMeta } = props;\n  const router = useRouter();\n\n  const meta = {\n    title: \"Tricked.pro\",\n    type: \"website\",\n    themeColor: \"#317EFB\",\n    keywords: \"javascript typescript programming rust discord matrix\",\n    viewport: \"width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\",\n    icon: \"favicon.ico\",\n    image: `/cards/${router.route.replace(\"/\", \"\").replace(/\\//gim, \"_\")}.png`,\n    ...langMeta[\"en\"],\n    ...langMeta[lang as keyof typeof langMeta],\n    ...customMeta,\n  };\n\n  return (\n    <div>\n      <Head>\n        <html lang={lang} />\n        <title>{meta.title}</title>\n        <meta name=\"msapplication-TileColor\" content={meta.themeColor} />\n        <link rel=\"canonical\" href={`https://tricked.pro${router.asPath}`} />\n        <meta name=\"viewport\" content={meta.viewport} />\n        <meta name=\"keywords\" content={meta.keywords} />\n        <meta name=\"theme-color\" content={meta.themeColor} />\n        <meta name=\"description\" content={meta.description} />\n        <link rel=\"icon\" href={meta.icon} type=\"image/ico\" />\n        <meta property=\"og:url\" content={`https://tricked.pro${router.asPath}`} />\n        <meta property=\"og:type\" content={meta.type} />\n        <meta property=\"og:site_name\" content={meta.title} />\n        <meta property=\"og:description\" content={meta.description} />\n        <meta property=\"og:title\" content={meta.title} />\n        <meta property=\"og:image\" content={meta.image} />\n        <meta name=\"twitter:title\" content={meta.title} />\n        <meta name=\"twitter:description\" content={meta.description} />\n        <meta name=\"twitter:image\" content={meta.image} />\n        {meta.date && <meta property=\"article:published_time\" content={meta.date} />}\n      </Head>\n\n      <Nav links={Links} lang={lang} TextValue={TextValue} />\n\n      <main>\n        <Box alignItems=\"stretch\" maxW={!DontforceWidth ? \"80rem\" : \"none\"} margin=\"auto\" padding={!DontforceWidth ? \"4px 10px 40px\" : \"none\"}>\n          {children}\n        </Box>\n      </main>\n      <Footer lang={lang} />\n    </div>\n  );\n}\n"],"names":["Links","name","route","meta","title","description","type","themeColor","keywords","viewport","Cont","children","Container","TextValue","href","currentPath","lang","active","props","useState","expended","setExpended","NextLink","passHref","prefetch","as","ChakraLink","bg","onMouseEnter","onMouseLeave","_hover","textDecoration","Center","Box","width","maxW","borderBottomWidth","borderRadius","borderBottomColor","links","useDisclosure","isOpen","onOpen","onClose","useColorMode","colorMode","toggleColorMode","router","useRouter","navigationItem","map","link","Link","pathname","p","rounded","py","borderTop","borderTopColor","Flex","h","alignItems","justifyContent","IconButton","size","icon","CloseIcon","HamburgerIcon","aria-label","display","md","onClick","HStack","spacing","base","Text","b","Button","MoonIcon","SunIcon","pb","mt","Stack","items","n","i","Footer","footer","className","hr","div","x","y","langMeta","en","nl","DontforceWidth","customMeta","image","replace","Head","html","content","rel","asPath","property","date","Nav","main","margin","padding"],"sourceRoot":""}